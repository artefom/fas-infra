# Start of the configuration file
user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {

    server_tokens off;

    # gzip enable
    gzip on;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";

    # get request id from headers
    map $http_x_request_id $my_request_id {
        default "$request_id";
        "~"     "$http_x_request_id";
    }

    # cache settings
    map $sent_http_content_type $expires {
        default off;
        text/html epoch; #means no cache, as it is not a static page
        text/css 30d;
        application/javascript 30d;
        application/woff2 30d;
        ~image/ 30d; #it is only the logo, so maybe I could change it once a month now
    }

    # set custom log format
    log_format main_ext '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        '"$host" sn="$server_name" rt=$request_time '
                        'ua="$upstream_addr" us="$upstream_status" '
                        'ut="$upstream_response_time" ul="$upstream_response_length" '
                        'cs=$upstream_cache_status';

    server {
        listen 80;
        server_name podosintovik.org www.podosintovik.org;

        # Redirect all HTTP requests to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name podosintovik.org www.podosintovik.org;

        ssl_certificate /etc/nginx/ssl/site.org.crt;
        ssl_certificate_key /etc/nginx/ssl/site.org.key;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        root /var/www;
        index index.html;
        autoindex off;
        client_max_body_size 0;

        # Security headers
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        # Route to Vue.js webserver (Securtest)
        location / {
            proxy_pass http://securtest;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        # Route to Shroombot API
        location /api/ {
            proxy_pass http://shroombot:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        # Route to Grafana
        location /grafana/ {
            proxy_pass http://grafana:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        # Static file serving and caching
        location / {
            try_files $uri $uri/ =404;
            expires $expires;
            gzip_http_version 1.1;
            gzip_vary on;
            gzip_comp_level 6;
            gzip_proxied any;
            gzip_types
                text/plain
                text/css
                text/js
                text/javascript
                text/x-js
                text/xml
                application/json
                application/x-javascript
                application/javascript
                application/xml
                application/xml+rss
                image/svg+xml;
            gzip_buffers 16 8k;
            add_header Cache-Control public;
        }

        location = /favicon.png {
           access_log off;
           log_not_found off;
        }

        # Health check endpoint.
        location = /health {
            return 200 'OK';
        }

        access_log /var/log/nginx/access.log main_ext;
        error_log /var/log/nginx/error.log warn;
    }
}
